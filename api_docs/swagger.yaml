swagger: "2.0"
info:
  version: 1.0.0
  title: COVID-NEPAL
  description: Covid19 Open source project
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:5000"
basePath: "/"
tags:
- name: "hospitals"
  description: "Everything about hostpitals"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
- name: "contacts"
  description: "Access to hospital contacts"
- name: "districts"
  description: "Access to districts"
- name: "nepal_counts"
  description: "Access to virus counts"
- name: "Virus Count"
  description: "Access to global virus counts"
schemes:
- "https"
- "http"
paths:
  /hospitals:
    post:
      tags:
      - "hospitals"
      summary: "Add a new hospital"
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Hospital object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Hospital"
      responses:
        405:
          description: "Invalid input"
      security:
      - petstore_auth:
        - "write:hospitals"
        - "read:hospitals"
    get:
      tags:
      - "hospitals"
      summary: "Finds hospitals by status"
      description: "Multiple status values can be provided with comma separated strings"
      operationId: "findHospitalsByStatus"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "district"
        in: "query"
        description: "District values that need to be considered for filter"
        type: "string"
      - name: "province"
        in: "query"
        description: "Province values that need to be considered for filter"
        type: "number"
      - name: "covidTest"
        in: "query"
        description: "District values that need to be considered for filter"
        type: "string"
      - name: "order"
        in: "query"
        description: "District values that need to be considered for filter"
        type: "string"
        enum:
          - "ASC"
          - "DESC"
      - name: "orderBy"
        in: "query"
        description: "Order values that need to be considered for filter"
        type: "string"
      - name: "size"
        in: "query"
        description: "Order values that need to be considered for filter"
        type: "number"
      - name: "page"
        in: "query"
        description: "Order values that need to be considered for filter"
        type: "number"
      - name: "lang"
        in: "query"
        description: "Order values that need to be considered for filter"
        type: "string"
      
        
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Hospital"
        400:
          description: "Invalid status value"
      security:
      - petstore_auth:
        - "write:hospitals"
        - "read:hospitals"
  /hospitals/{nameSlug}/:
    get:
      tags:
      - "hospitals"
      summary: "Get hospitals for covid"
      description: "Returns hospitals for covid"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "nameSlug"
        in: "path"
        description: "Slug of Hospital to return"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Hospital"
        404:
          description: "Hospital not found"
      security:
      - api_key: []
  /hospitals/covid/:
    get:
      tags:
      - "hospitals"
      summary: "Get hospitals for covid"
      description: "Returns hospitals for covid"
      produces:
      - "application/json"
      - "application/xml"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Hospitals"
        404:
          description: "Hospital not found"
      security:
      - api_key: []
  /hospitals/{id}/:
    get:
      tags:
      - "hospitals"
      summary: "Get hospitals for covid"
      description: "Returns hospitals for covid"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id"
        in: "path"
        description: "Slug of Hospital to return"
        required: true
        type: "number"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Hospitals"
        404:
          description: "Hospital not found"
      security:
      - api_key: []
    patch:
      tags:
      - "hospitals"
      summary: "Partial a Hospital"
      description: ""
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Id of Hospital to update"
        required: true
        type: "number"
      responses:
        405:
          description: "Invalid input"
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
    delete:
      tags:
      - "hospitals"
      summary: "Deletes a Hospital"
      description: ""
      operationId: "deleteHospital"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Id of Hospital to delete"
        required: true
        type: "number"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Pet not found"
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"

  /contacts:
    post:
      tags:
      - "contacts"
      summary: "Returns all the contacts"
      description: "Returns a list of contacts"
      operationId: "getContact"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Contact object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Hospital"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "object"
      security:
      - api_key: []
  /contacts/emergency:
    get:
      tags:
      - "contacts"
      summary: "Get emergency contacts"
      description: ""
      operationId: "contactEmergency"
      produces:
      - "application/xml"
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "object"
        400:
          description: "Invalid contact"
  /contacts/hospitals:
    get:
      tags:
      - "contacts"
      summary: "Get hospital contacts"
      description: ""
      operationId: "contactHospital"
      produces:
      - "application/xml"
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "object"
        400:
          description: "Invalid contact"
  /contacts/{id}:
    patch:
      tags:
      - "contacts"
      summary: "Find purchase order by ID"
      description: "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions"
      operationId: "getOrderById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of pet that needs to be fetched"
        required: true
        type: "integer"
        maximum: 10.0
        minimum: 1.0
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Order"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Order not found"
    delete:
      tags:
      - "contacts"
      summary: "Delete purchase order by ID"
      description: "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors"
      operationId: "deleteOrder"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the order that needs to be deleted"
        required: true
        type: "integer"
        minimum: 1.0
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Order not found"

  /districts:
    get:
      tags:
      - "districts"
      summary: "Get all districts"
      description: ""
      operationId: "getDistrict"
      produces:
      - "application/json"
      - "application/xml"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "string"
        400:
          description: "Invalid contact"
  /counts/nepal/latest:
    get:
      tags:
      - "nepal_counts"
      summary: "Get virus count in nepal"
      description: ""
      operationId: "getVirusCountNepal"
      produces:
      - "application/json"
      - "application/xml"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "string"
        400:
          description: "Invalid contact"
  /counts/nepal/:
    post:
      tags:
      - "nepal_counts"
      summary: "Get virus count in nepal"
      description: ""
      operationId: "postCount"
      produces:
      - "application/json"
      - "application/xml"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "string"
        400:
          description: "Invalid contact"
  /counts/nepal/{id}:
    put:
      tags:
      - "nepal_counts"
      summary: "Get virus count in nepal"
      description: ""
      operationId: "postCount"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id"
        in: "path"
        description: "Slug of Hospital to return"
        required: true
        type: "number"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "string"
        400:
          description: "Invalid contact"
  
  /virus-counts:
    post:
      tags:
      - "Virus Count"
      summary: "Add virus count"
      description: ""
      operationId: "postVirusCount"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id"
        in: "path"
        description: "Slug of Hospital to return"
        required: true
        type: "number"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
        400:
          description: "Invalid contact"
    get:
      tags:
      - "Virus Count"
      summary: "Get all virus count"
      description: ""
      operationId: "getVirusCountLatest"
      produces:
      - "application/json"
      - "application/xml"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "object"
        400:
          description: "Invalid contact"
  
  /virus-counts/latest:
    get:
      tags:
      - "Virus Count"
      summary: "Get latest virus count"
      description: ""
      operationId: "getVirusCountLatest"
      produces:
      - "application/json"
      - "application/xml"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "object"
        400:
          description: "Invalid contact"
  
  /virus-counts/today:
    get:
      tags:
      - "Virus Count"
      summary: "Get today's virus count"
      description: ""
      operationId: "getVirusCountToday"
      produces:
      - "application/json"
      - "application/xml"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "object"
        400:
          description: "Invalid contact"

securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Order:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      quantity:
        type: "integer"
        format: "int32"
      shipDate:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        description: "Order Status"
        enum:
        - "placed"
        - "approved"
        - "delivered"
      complete:
        type: "boolean"
        default: false
    xml:
      name: "Order"
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Category"

  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Tag"
  Hospitals:
    type: "array"
    items:
      type: "object"
      required:
        - "name"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
          example: "doggie"
        nameSlug:
          type: "string"
        hospitalType:
          type: "string"
        availableTime:
          type: "array"
          items:
              type: "string"
        openDays:
          type: "string"
        location:
          type: "string"
        mapLink:
          type: "string"
        coordinates:
          type: "array"
          items:
            type: "number"
        totalBeds:
          type: "number"
        availableBeds:
          type: "number"
        covidTest:
          type: "boolean"
        testingProcess:
          type: "string"
        govtDesignated:
          type: "boolean"
        numIsolationBeds:
          type: "number"
        icu:
          type: "number"
        focalPoint:
          type: "string"
        contact:
          type: "array"
          items:
            type: "string"
        ventilators:
          type: "number"
        province:
          type: "object"
          properties:
            code:
              type: "number"
              example: 1
            name:
              type: "string"
              example: "Bagmati"
        district:
          type: "string"
  Hospital:
    type: "object"
    required:
      - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "doggie"
      nameSlug:
        type: "string"
      hospitalType:
        type: "string"
      availableTime:
        type: "array"
        items:
            type: "string"
      openDays:
        type: "string"
      location:
        type: "string"
      mapLink:
        type: "string"
      coordinates:
        type: "array"
        items:
          type: "number"
      totalBeds:
        type: "number"
      availableBeds:
        type: "number"
      covidTest:
        type: "boolean"
      testingProcess:
        type: "string"
      govtDesignated:
        type: "boolean"
      numIsolationBeds:
        type: "number"
      icu:
        type: "number"
      focalPoint:
        type: "string"
      contact:
        type: "array"
        items:
          type: "string"
      ventilators:
        type: "number"
      province:
        type: "object"
        properties:
          code:
            type: "number"
            example: 1
          name:
            type: "string"
            example: "Bagmati"
      district:
        type: "string"
  Contact:
    type: "object"
    required:
      - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "doggie"
      contactType:
        type: "string"
      availableTime:
        type: "array"
        items:
            type: "string"
      openDays:
        type: "string"
      location:
        type: "string"
      mapLink:
        type: "string"
      coordinates:
        type: "array"
        items:
          type: "number"
      totalBeds:
        type: "number"
      availableBeds:
        type: "number"
      covidTest:
        type: "boolean"
      testingProcess:
        type: "string"
      govtDesignated:
        type: "boolean"
      numIsolationBeds:
        type: "number"
      icu:
        type: "number"
      focalPoint:
        type: "string"
      contact:
        type: "array"
        items:
          type: "string"
      ventilators:
        type: "number"
      province:
        type: "object"
        properties:
          code:
            type: "number"
            example: 1
          name:
            type: "string"
            example: "Bagmati"
      district:
        type: "string"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"